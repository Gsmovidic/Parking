// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Parking.Data;

#nullable disable

namespace Parking.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221122233341_addRecibo")]
    partial class addRecibo
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Parking.Data.Entities.Celda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Disponible")
                        .HasColumnType("bit");

                    b.Property<int>("ParqueaderoId")
                        .HasColumnType("int");

                    b.Property<int>("TipoVehiculoCelda")
                        .HasColumnType("int");

                    b.Property<string>("Ubicación")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ParqueaderoId");

                    b.ToTable("Celda");
                });

            modelBuilder.Entity("Parking.Data.Entities.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Cedula")
                        .IsUnique();

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Parking.Data.Entities.ClientePlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<bool>("EnUso")
                        .HasColumnType("bit");

                    b.Property<int>("PlanId")
                        .HasColumnType("int");

                    b.Property<bool>("Vigente")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("PlanId");

                    b.ToTable("ClientesPlanes");
                });

            modelBuilder.Entity("Parking.Data.Entities.Parqueadero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Parqueaderos");
                });

            modelBuilder.Entity("Parking.Data.Entities.Plan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Disponibilidad")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TipoVehiculo")
                        .HasColumnType("int");

                    b.Property<float>("ValorPlan")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("Planes");
                });

            modelBuilder.Entity("Parking.Data.Entities.Recibo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Detalles")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Hora")
                        .HasColumnType("real");

                    b.Property<decimal>("ValorHora")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Recibos");
                });

            modelBuilder.Entity("Parking.Data.Entities.RegistroEntrada", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ParqueaderoId")
                        .HasColumnType("int");

                    b.Property<string>("PlacaVehiculo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoCliente")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParqueaderoId");

                    b.ToTable("RegistroEntradas");
                });

            modelBuilder.Entity("Parking.Data.Entities.Vehiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParqueaderoId")
                        .HasColumnType("int");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TipoVehiculo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ParqueaderoId");

                    b.HasIndex("Placa", "ClienteId")
                        .IsUnique();

                    b.ToTable("Vehiculos");
                });

            modelBuilder.Entity("Parking.Data.Entities.Celda", b =>
                {
                    b.HasOne("Parking.Data.Entities.Parqueadero", "Parqueadero")
                        .WithMany("Celdas")
                        .HasForeignKey("ParqueaderoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parqueadero");
                });

            modelBuilder.Entity("Parking.Data.Entities.ClientePlan", b =>
                {
                    b.HasOne("Parking.Data.Entities.Cliente", "Cliente")
                        .WithMany("ClientePlanes")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Parking.Data.Entities.Plan", "Plan")
                        .WithMany("ClientePlanes")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Plan");
                });

            modelBuilder.Entity("Parking.Data.Entities.RegistroEntrada", b =>
                {
                    b.HasOne("Parking.Data.Entities.Parqueadero", "Parqueadero")
                        .WithMany("RegistrosEntradas")
                        .HasForeignKey("ParqueaderoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parqueadero");
                });

            modelBuilder.Entity("Parking.Data.Entities.Vehiculo", b =>
                {
                    b.HasOne("Parking.Data.Entities.Cliente", "Cliente")
                        .WithMany("Vehiculos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Parking.Data.Entities.Parqueadero", null)
                        .WithMany("Vehiculos")
                        .HasForeignKey("ParqueaderoId");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Parking.Data.Entities.Cliente", b =>
                {
                    b.Navigation("ClientePlanes");

                    b.Navigation("Vehiculos");
                });

            modelBuilder.Entity("Parking.Data.Entities.Parqueadero", b =>
                {
                    b.Navigation("Celdas");

                    b.Navigation("RegistrosEntradas");

                    b.Navigation("Vehiculos");
                });

            modelBuilder.Entity("Parking.Data.Entities.Plan", b =>
                {
                    b.Navigation("ClientePlanes");
                });
#pragma warning restore 612, 618
        }
    }
}
